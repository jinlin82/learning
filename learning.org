* Econometrics
** 虚拟变量
*** 虚拟变量的概念 
     - 虚拟变量是指取值为 0 和 1 的变量。
     - 虚拟变量中 1 的含义是代表某一分类，0 代表其他。
     - 在有截距项的线性回归模型中，引入的虚拟变量个数不能等于分类的个数，否则会
       和截距项构成完全的多重共线性，导致模型无法估计。这时引入虚拟变量的个数应
       为分类个数减 1 。
     - 在不含截距项的回归模型中，虚拟变量的个数等于分类数。

*** 虚拟变量的作用
    - 变截距模型
    - 变斜率模型
    - 分段回归模型

*** 分段线性回归(piecewise linear regression, segmented linear regression)
    - is a method in regression analysis in which the independent variable is
      partitioned into intervals and a separate line segment is fit to each
      interval.
    - Segmented regression analysis can also be performed on multivariate data
      by partitioning the various independent variables.
    - Segmented regression is useful when the independent variables, clustered
      into different groups, exhibit different relationships between the
      variables in these regions.
    - The boundaries between the segments are breakpoints.

** 分布滞后模型(distributed-lag model)
*** 模型定义
    - 分布滞后模型：在时间序列回归模型中，如果回归模型不仅包括解释变量，还包括解
      释变量的滞后项，如
        \[Y_{t}=\alpha+\beta_{0}X_{t}+\beta_{1}X_{t-1}+\beta_{2}X_{t-2}+u_{t}\]
    - 根据滞后长度的取值，可以分为有限分布滞后模型和无限分布滞后模型
    - 分布滞后模型中回归系数的意义

\begin{equation}\label{eqn:try}
    E=mc^2
\end{equation}

公式 \eqref{eqn:try}

*** 模型估计存在的问题
    - 多重共线性问题
    - 损失自由度问题
    - 最大滞后期 $k$ 的确定问题
*** 估计方法I: 经验加权法
*** 估计方法II: 阿尔蒙多项式法
** 自回归模型(autoregressive model)
*** 模型定义
    - 自回归模型：时间序列回归模型中，模型解释变量中包含有因变量的一个或多个滞后
      项，又称动态模型(dynamic models)，如
      \[Y_{t}=\alpha+\beta X_{t}+\gamma Y_{t-1}+u_{t}\]
    - 滞后项的阶数需要确定
*** 可以转化为自回归模型的模型
    - 库伊克模型
    - 自适应预期模型
    - 部分调整模型
*** 自回归模型的估计
    - 广义最小二乘法
    - 工具变量法
*** 自回归模型中序列相关检验： Durbin $h$ 检验
** 格兰杰因果关系检验 (Granger Causality)
*** 背景
    - 回归分析反映的是变量之间的相关关系，不是变量之间的因果关系。
    - Clive Granger 认为经济上的因果关系可以通过测度一个时间序列对另一个时间序列
      未来值的预测能力来反映。
    - 什么是因果关系是一个哲学问题。一些经济计量学家认为Granger检验反映的“预测
      因果”。

*** 定义
    - 时间序列 $X$ 称为 时间序列 $Y$ 的Granger原因，当 $X$ 的滞后值(和 $Y$ 本身
      的滞后值一起)对 $Y$ 的未来值有统计显著性的影响，这些显著性可以通过 $t$ 检
      验或 $F$ 检验来验证。
    - Granger基于以下两条准则定义因果关系的：
      1. 原因先于结果发生。
      2. 原因中含有结果未来值的独一无二的信息。
*** 方法
    - Any particular lagged value of one of the variables is retained in the
      regression if (1) it is significant according to a t-test, and (2) it and
      the other lagged values of the variable jointly add explanatory power to
      the model according to an F-test. Then the null hypothesis of no Granger
      causality is not rejected if and only if no lagged values of an
      explanatory variable have been retained in the regression.
    - 公式表示：
*** 注意事项
    - If a time series is a Stationary process, the test is performed using the
      level values of two (or more) variables.
    - If the variables are non-stationary, then the test is done using first
      (or higher) differences.
    - The number of lags to be included is usually chosen using an information
      criterion, such as the Akaike information criterion or the Schwarz
      information criterion.
    - In practice it may be found that neither variable Granger-causes the
      other, or that each of the two variables Granger-causes the other.
*** 实现方法
    - STATA 中的实现方法
      1. 分别估计两个模型，然后根据 $F$ 统计量的定义计算统计量的值并进行检验。
      2. 估计无约束模型，利用 =test= 命令检验系数整体是否为0。
      3. 下载安装 =gcause= 命令，利用 =gcause= 命令检验
	 - =ssc install gcause=
	 - =gcause y x, lag(3)=
*** 例子
** 联立方程模型

* Unorganized
** 事件分析法
*** 概念
    1. An Event study is a statistical method to assess the impact of an event
       on the value of a firm.
       1. For example, the announcement of a merger between two business
          entities can be analyzed to see whether investors believe the merger
          will create or destroy value.
    2. The basic idea is to find the abnormal return attributable to the event
       being studied by adjusting for the return that stems from the price
       fluctuation of the market as a whole.
    3. Event studies are thus common to various research areas, such as
       accounting and finance, management, economics, marketing, information
       technology, law, and political science.
    4. the breadth of the studied event types:
       1. economy-wide events (i.e., market shocks, such as regulatory changes,
          or catastrophic events)
       2. corporate events, such as mergers and acquisitions, earnings
          announcements, debt or equity issues, corporate reorganisations,
          investment decisions and corporate social responsibility
*** 实证方法
    1. Based on an *estimation window* prior to the analyzed event, the method
       estimates what the normal stock returns of the affected firm(s) should
       be at the day of the event and several days prior and after the event
       (i.e., during the *event window* ). Thereafter, the method deducts this
       'normal returns' from the 'actual returns' to receive 'abnormal returns'
       attributed to the event.
    2. may differ with respect to their specification of normal returns. The
       most common model for normal returns is the 'market model'.
    3.  Following this model, the analysis implies to use an estimation window
        (typically sized 120 days) prior to the event to derive the typical
        relationship between the firm's stock and a reference index through a
        regression analysis. Based on the regression coefficients, the normal
        returns are then projected and used to calculate the abnormal
        returns. Alternative models for the normal returns include the CAPM
        model, or more simplistic approaches such as mean returns.
*** 异常收益率计算步骤
    - For the most common model, the 'market model', the steps are as follows:
      1. Retrieve and match time series of financial returns of the focal firm's
         stock and its reference index.
      2. For each event, identify the sequences of firm and market returns that
         need to be included in the estimation window.
      3. Using regression analysis, calculate the alpha, beta and sigma
         coefficients that explicate the typical relationship between the stock
         and the reference index.
      4. With these three parameters, predict the 'normal returns' for all days
         of the event window.
      5. Deducting these 'normal returns' from the 'actual returns' gives you
         the 'abnormal returns' which are the metrics of interest.
*** 异常收益率检验
    1. The most common test, the t-test, divides the abnormal returns through
       the root mean square error of the regression. Resulting t-values need
       then to be compared with the critical values of the Student's
       t-distribution.
*** 软件实现
    1. Single event studies can easily be implemented with MS Excel
    2. event studies covering multiple events need to be built using statistical
       software packages (e.g., STATA, Matlab).
    3. Besides of these multi-use tools, there are solutions tailored to
       conducting event study analyses (e.g., Eventus, Event Study Metrics,
       EventStudyTools).
** Stratified sampling vs. Quota sampling
   - Quota sampling is a method for selecting survey participants that is a
     non-probabilistic version of stratified sampling.

** Gauss-Newton method


** 如何把 html source 转化为 org mode
*** 目的
    - wikipedia里面网页的source代码里面有公式的tex代码，不用输入 tex 公式
*** 方法
    - 删除所有的 html tags， 除了包含tex公式的部分
** Python
*** IPython + Emacs

** 基于联合分析的市场定价策略
*** 均匀正交设计
*** 打分效用
    1. 求平均值得到效用值
*** 联合分析（Conjoint Analysis）
    - online conjoint analysis (Sawtooth software)
    - Sawtooth Software, Inc. is a computer software company based in Orem,
      Utah, USA. The company provides survey software tools, and specializes in
      conjoint analysis.
**** 输入
     1. 属性
     2. 水平：互斥；属性水平应具有明确和清晰的含义
     3. 受访者
     4. 先验信息
**** 输出
     1. 效用值：等距数据，可加但不可比，但0没有绝对值的意义
     2. 重要性：等比数据
     3. 市场模拟：模拟竞争市场的情景
**** 种类
     1. 联合价值分析(CVA)
     2. 自适应联合分析(ACA)
     3. 基于选择的联合分析(CBC)
     4. 自适应的基于选择的联合分析(ACBC)
     5. 菜单形式的联合分析(MBC)
*** 基于选择的联合分析(CBC)(离散选择模型，二分类因变量模型)
**** effect-coding

*** 问题
    1. 实际选择与填写问卷有较大的偏差
    2. 贝叶斯估计方法(why?)与极大似然估计的差异
    3. 抽样问题
    4. 系数的显著性
    5. 实验设计在市场研究中的作用
** interpolate, extrapolate, imputation
    1. interpolate: 插值
    2. extrapolate: 外推
    3. imputation: 插补(针对缺失值)
** Markov chain
   1. what is Markov chain
   2. how to simulate Markov chain
** latex listing 包中 R 代码 多个 # 出错
   1. org文件R代码修改 org.el 中 lstset 里面的 texcl= true
   2. Rmd文件R代码修改 default-1.17.0.2.tex 中lstset 里面的 texcl= true
 
 
  [[file:c:/Works/Working_Paper/2019-01-shibor-msgarch/ms-garch.Rmd][file:c:/Works/Working_Paper/2019-01-shibor-msgarch/ms-garch.Rmd]]
** R 更新步骤：
   1. 下载并安装新版本R安装文件（注意：一般不要下载最新版本，因为可能有些包没有更新不兼容）
   2. 把旧版本中 library 复制到新版本 library 中，注意 不要替换
   3. update 所有 packages(不要更新 rmarkdown 和 bookdown，因为已经修改), 可能需要几次
   4. 把initial file.(etc文件夹)拷入新版中install.packages(file.choose(), repos = NULL, type="binary")
   5. 更新环境变量名
   6. 替换 rmarkdown 包中的 default-1.17.0.2.tex 文件
   7. bookdown 源代码已修改，需remove 后再安装新编译版本
* JavaScript
** JavaScript 语言
** Node.js
** 工具支持
   1. js2-mode
   2. js-commit
   3. indium(存在问题)

* Rmarkdown 写作相关
** Markdown 中文换行输出后有空格问题解决方法
   - 这是很长时间以来都存在的一个问题。
   - 现在可以通过pandoc中的 east_asian_line_breaks 这个 extensions 来解决。
   - 可以在rmd的yaml部分添加
word_document: 
    md_extensions: +east_asian_line_breaks
** Rmarkdown docx 输出模板配置（需要更新）
   1. 配置 word 模板文件，具体步骤见 [[https://rmarkdown.rstudio.com/articles_docx.html]]
   2. 其中需要配置样式的格式，比较复杂的是标题自动编号的配置，需要用到多级列表，具体为
      1. 图标 多级列表 - 定义新的多级列表， 点击下面的更多，设置相关，其中关键在于 *将级别链接到样式*
   3. 还需要配置公式，图，表等的格式
   4. 将配置好的word文档放在rmd文件夹中，配置rmd文件yaml header， 在word输出选项下增加： reference_docx: word-styles-01.docx
** R 中修改package的源代码并重新安装的方法
   1. 安装 devtools 包
   2. 下载需要修改包的源代码压缩包，解压修改代码
   3. 利用 devtools 包里面的 ~load_all~ 函数 和 ~remove.packages~ 函数进行调试效果
   4. 利用 ~R CMD INSTALL --build packagename~ 把源代码文件夹build为 Windows Binary 文件
   5. 该Binary文件可使用 ~install.packages(file.choose(), repos = NULL,
      type="binary")~ ， 安装之前可能需要先remove该package并重启R
** Rmarkdown 中交叉引用解决方法
   1. 参考文献使用 pandoc-citeproc
   2. 公式、图、表和章节交叉引用有两种解决方案
      1. 使用 pandoc-crossref: 优点功能强大，可定制性强，引用语法简单，缺点是图只支持 markdown，
         不支持Rmarkdown，也即Rmarkdown对图片的处理不是生成原始markdown，所以支持不好
      2. 使用 bookdown：支持Rmarkdown，缺点是定制性差，引用语法相对繁琐一点
   3. 目前建议: 公式使用 pandoc-crossref, 图和表使用bookdown，章节目前由于没有使用经验待定
   4. bookdown 中引用的问题：
      1. 都是带有章节的引用，例如 图 3.2 ，图表编号后有一个冒号，与目前中文习惯不一致
      2. 解决方法：修改 bookdown 源代码，并重新 build 并安装，具体方法见 R 中修改package的源代码并重新安装的方法
      3. html.R文件具体修改的代码（可以在bookdown源代码中html.R通过查找 "###" 定位），具体代码为：
#+BEGIN_SRC R :eval no
seq_numbering = TRUE, 
  ### 增加了引用格式选项 seq_numbering=T，统一输出，=F 按章输出
x = resolve_refs_html(x, global = seq_numbering)  ### 增加了引用格式选项 seq_numbering=T，统一输出，=F 按章输出
paste0(label_prefix(type), num, '&nbsp;&nbsp;&nbsp;')  #### 增加 表数字 后面的空格
#+END_SRC
** 使用bookdown交叉引用步骤
   1. 安装修改后的 bookdown ，
   2. 增加 _bookdown.yaml，修改英文 Figure Table 为图和表
   3. 修改Rmd文件的header为：

#+BEGIN_SRC r :eval no
---
title: "基于MS-GARCH模型的上海银行同业拆借利率波动性分析"
author: "Jin"
date: "2019-01-14"
output:
  bookdown::html_document2:
    number_sections: true
    seq_numbering: true
    fig_caption: true
    highlight: haddock
    theme: null
    md_extensions: +east_asian_line_breaks
    keep_md: true
    toc: false
    pandoc_args: ["--filter", "pandoc-crossref", "-M", "eqnPrefix="]
  pdf_document:
    keep_tex: yes
    latex_engine: xelatex
    md_extensions: +east_asian_line_breaks
    pandoc_args: ["--listing", "--filter", "pandoc-crossref"]
  bookdown::word_document2:
    fig_caption: true
    reference_docx: abc.docx
    md_extensions: +east_asian_line_breaks
    pandoc_args: ["--filter", "pandoc-crossref"]
css: markdown.css
autoEqnLabels: true
eqnPrefixTemplate: ($$i$$)
linkReferences: true
bibliography: Bibfile.bib
csl: chinese-gb7714-2005-numeric.csl
link-citations: true
---
#+END_SRC
** bookdown 和 rmarkdown 在LaTeX默认输出表格设置上有区别
   1. rmarkdown 处理更优秀
   2. 使用 bookdown::pdf_document2: 时，为达到与 rmarkdown 相同的效果，必须在
      kable函数中加入 ~longtable = TRUE, booktabs = TRUE, linesep=""~ 选项
   3. 且即使加入上面选项，多页表格中表头不能自动重复，需要额外使用 kableExtra 包
      才能达到相同的效果
* 参考文献管理
** 参考文献管理软件 Jabref
*** 功能
    1. 能够导入其他格式参考文献文件为bib
    2. 自动生成 key
    3. 排序，查看等
*** 安装
    1. 保证电脑上存在 Java 虚拟机 JRE 1.8 版本以上，移动版时设置 java 环境变量
    2. 可 portable 使用
*** 知网文献导入步骤
    1. 知网查找文献后导出为 Endnote 格式（.txt 文件）
    2. Jabref Import 选择默认(所有格式)
    3. remove duplicates
    4. 选择所有条目， 自动生成 bibtex key, 保存bib文件

** Rmd 中参考文献管理
   1. 原理为 pandoc-citeproc
   2. 准备好 bib 文件
   3. 在 yaml header 中加入：

~bibliography: Bibfile.bib~

~csl: chinese-gb7714-2005-numeric.csl~
   3. 文件结尾加入：

~# 参考文献~

~[//]: # (\bibliography{Bibfile})~
   4. 正文中通过 =[@bibtexkey]= 引用

** org-mode 中参考文献管理
*** 概念
    1. bibtex: 一个程序，类似于 xelatex
    2. bib file: 包含参考文献条目的文件，database
    3. bibtex-mode: 用于编辑bib文件
    4. ebib: 一个基于emacs的bib管理包，是bibtex-mode的升级类似于 JabRef
    5. reftex: Emacs 的一个minor-mode，helps with inserting citations from '.bib',包括其他的交叉应用
    6. ox-bibtex.el: 用于org-mode的参考文献输出，主要是针对 html 输出
    7. ox-bibtex-chinese：用于中文标准的参考文献样式输出
    8. helm-bibtex: 建立在 reftex 的基础上，可以在tex，rmd和org-mode中使用，但在org-mode中完全可以被org-ref取代
    9. org-ref: 建立在 helm-bibtex的基础上，集reftex和helm-bibtex之大成，但主要应用于org-mode
*** org-ref 使用指南
    1. org-ref依赖于helm-bibtex包，在tex，rmd和org-mode中想自动载入本地 bib文件，必需有以下格式语句：

~\bibliography{Bibfile}~

       这是tex引用参考文献的方式，在rmd中也有改格式的语句，在org文件中可以使用一行注释包含该格式语句

~# \bibliography{Bibfile}  \bibliographystyle{GBT7714-2005N} % 使用该注释让org-ref找到本地bib文件~

    1. [@2] 在 =init= 文件中加入 =(require 'org-ref)= 开始使用 =org-ref=
    2. =org-ref= 函数是综合入口
    3. =org-ref= 一大主要用途是用于插入(*insert*)参考文献(*cite*), 公式，表格，图引用(*ref*) 和
       *label* ， 此外还增加了两种类型 *bibliography* 和 *bibliographystyle* ，一共是
       5种.
    4. =org-ref= 支持5种 completion 样式，可以通过 =setq= 设置，
       如 =(setq org-ref-completion-library 'org-ref-helm-bibtex)= , 也可以在emacs
       中运行函数切换，分别为：
       1. basic 模式，提供bibtex-key选择，切换函数为： =org-ref-insert-cite-with-completion=
       2. reftex 模式，就是使用reftex，切换函数为： =org-ref-reftex-completion=
       3. ivy-bibtex 模式，使用ivy方式提供选择，切换函数为： =org-ref-ivy-cite-completion=
       4. helm-cite 模式，一种较简单helm补全方式，该方式提供了排序，切换函数为： =org-ref-change-completion=
       5. helm-bibtex模式，综合最优，切换函数为： =org-ref-bibtex-completion-completion= 
       注意这些切换函数中都包含 =org-ref= 和 =completion=
    5. 把上面5种插入对象，主要是(cite, ref, label)三种，和5种completion样式进行
       组合，再加入 =org-ref= , =insert= 和 =link= 三个关键词，就可以组合得到各种插入
       函数，可如下图所示：

#+BEGIN_SRC mermaid :file org-ref-funcion.png
graph LR
    org-ref --> cite-with
    org-ref --> reftex	
    org-ref --> ivy	
    org-ref --> helm-cite
    org-ref --> bibtex	
    cite-with -->insert
    reftex	 -->insert
    ivy	 -->insert
    helm-cite -->insert
    bibtex	 -->insert
    insert --> cite             
    insert --> ref              
    insert --> label            
    insert --> bibliography     
    insert --> bibliographystyle
    cite             --> link
    ref              --> link
    label            --> link
    bibliography     --> link
    bibliographystyle--> link

#+END_SRC

#+RESULTS:
[[file:org-ref-funcion.png]]

    7. [@7] 一般插入函数为 =org-ref-insert-link= , 其绑定为 =C-c ]= , 如果把
       completion backend 设定为 =helm-bibtex=, 其具体为三个函数：
       1. =org-ref-helm-insert-cite-link= 绑定键为： =C-c ]=
       2. =org-ref-helm-insert-ref-link= 绑定键为： =C-u C-c ]=
       3. =org-ref-helm-insert-label-link= 绑定键为： =C-u C-u C-c ]=
    8. 注意： =helm-bibtex= 函数不加载本地 bib文件， 要加载本地bib文件要使用
       =helm-bibtex-with-local-bibliography= 函数

*** 利用 pandoc 处理交叉引用

* Git
** 版本控制(version control)
*** 概念
A component of software configuration management, version control, also known as
revision control or source control, is the management of changes to
documents, computer programs, large web sites, and other collections of
information. Changes are usually identified by a number or letter code, termed
the "revision number," "revision level," or simply "revision." For example, an
initial set of files is "revision 1." When the first change is made, the
resulting set is "revision 2," and so on. Each revision is associated with a
timestamp and the person making the change. Revisions can be compared, restored,
and with some types of files, merged. The need for a logical way to organize and
control revisions has existed for almost as long as writing has existed, but
revision control became much more important, and complicated, when the era of
computing began. The numbering of book editions and of specification revisions
are examples that date back to the print-only era. Today, the most capable (as
well as complex) revision control systems are those used in software
development, where a team of people may change the same files. 
更多参见维基百科网站：
[[https://en.wikipedia.org/wiki/Version_control]]
*** 版本控制软件
Software tools for revision control are essential for the organization of multi-developer projects.
*** svn
*** git
*** Magit
*** Github
** Git Basics
*** 基础
    1. 设置环境变量
    2. git 原理
*** HEAD, master, origin/master
    1. ~HEAD~: 当前所在的commit版本，在查看历史版本中，也指的是当前查看的版本
    2. ~master~: 本地repo主分支所在的版本
    3. ~origin/master~: 远程repo的主分支所在版本
    4. 在本地 repo 修改提交后还未push的时候， ~master~, ~origin/master~ 不一样
    5. 在使用 ~git checkout~ 查看历史版本时， ~HEAD~ 和 ~master~ 不一样
*** 如何引用历史版本
    1. 使用 SHA-1 码
    2. 使用HEAD, master, origin/master名称
    3. 使用 ~ 和 ^ 操作符号

#+BEGIN_EXAMPLE
G   H   I   J
 \ /     \ /
  D   E   F
   \  |  / \
    \ | /   |
     \|/    |
      B     C
       \   /
        \ /
         A

A =      = A^0
B = A^   = A^1     = A~1
C = A^2
D = A^^  = A^1^1   = A~2
E = B^2  = A^^2
F = B^3  = A^^3
G = A^^^ = A^1^1^1 = A~3
H = D^2  = B^^2    = A^^^2  = A~2^2
I = F^   = B^3^    = A^^3^
J = F^2  = B^3^2   = A^^3^2
#+END_EXAMPLE

*** 切换查看历史版本
      1. 切换到历史版本(commit)或分支(branch) 进行 *查看*: =git checkout= <分支名 或 commit SHA 或 master~3>(表示master版本后退几步)
      2. magit 中 快捷键 b b
      3. rstdio 中 查看 history 后，在Terminal中输入 git checkout 命令
*** 撤销历史提交，undo，回滚到历史版本
    1. 利用编辑器的 undo redo命令
    2. (注意：非常危险，不能恢复的操作)保存了后但未stage时利用 git checkout filename， magit-discard, Rstudio中的Revert..按钮作用相同
    3. (注意：非常危险，不能恢复的操作)保存了并stage后但未commit后同样利用 migit-discard
    4. 如果修改已经提交，但还未push的时候：撤销上一次操作： git revert HEAD，同样可以撤销几次操作，可能会有冲突，利用冲突解决方法解决
    5. 如果修改提交并且已经push，这时同4中的操作，并再push撤销后的提交
    6. 4，5的操作方法比较安全，但log history比较乱，有时要处理冲突，如果想完全回
       到某历史版本，不考虑其后的修改，并清除改历史版本以后的log history，可以使
       用 git reset --hard <rev>, 然后 git push --force
    7. 注意6的操作后 log history 中不包含历史版本后面提交的，如果这时想恢复到原
       来的新版本，先使用 git reflog 得到完整的log history，再git reset --hard
       <rev>, 然后 git push --force
    8. 注意：git log 和 git reflog 在cmd中中文乱码，在设置后，使用 git bash.exe 可以
       解决，但 git bash.exe 在Rstudio中有一个bug，不能找到git的环境变量(which git)
*** 停止 track file 或者 文件夹
    1. For single file:
       #+begin_example
       git rm --cached mylogfile.log
       #+end_example
    2. For single directory:
       #+begin_example
       git rm --cached -r mydirectory
       #+end_example
    3. 在magit中使用 ~magit-file-untrack~ 函数
*** 查看所有 track 的文件
    - magit 中不支持，可以使用 ~git ls-files~ 命令，但在 cmd 中使用时，中文名会乱
      码，经过设置后，可以在 ~git-bash~ 中使用。
    - neotree中可以显示
** Github
*** 注册安装
    1. 注册，网页操作
    2. Github 程序
*** 克隆GitHub项目的方法
    1. 使用 git clone 命令
    2. Rstudio中clone项目
    3. 使用magit-clone命令
    4. 最优：使用helm-github-stars, 然后C-z到Action，然后选择clone
    5. 注意：不要使用 magithub-clone命令，会出现错误，并且可能接下来导致前面几种方法出现错误
*** 创建项目：把本地文件夹用git控制并push到Github步骤：
      1. 使用Github网页操作：网页中建立项目，把需要版本控制的文件上传到项目中，然后再把项目clone到文件夹中。
      2. 使用git命令操作,可以在Terminal运行git命令.
      3. 使用Magit操作：
	 1. 切换到文件夹或打开文件夹中到文件，运行 magit-init
	 2. 选择需要 stage 到 文件，不要选择大文件，不需要监控的文件
	 3. commit, 本地库已被 git 版本控制
	 4. 运行 magithub-create 把 local repo push 到 github，按提示操作即可
*** 合作者(Collaborator)步骤：
     1. repository owner 向合作者发出合作邀请(repository setting)
     2. 被邀请者在网页 (https://github.com/username/reponame/invitations) 接受邀请，成为合作者
     3. 合作者 clone owner's 的repository 到 本地 repository
     4. 修改(Modified) -> 保存(save) -> 登记(stage) -> 提交(commit) -> 上传(push)
     5. 重新开始工作时，下拉(pull)最新版本
     6. 如果push的时候，remote 已经修改，两个修改不一致则会产生冲突，这时则需重新 pull 并 手工解决冲突后再按push步骤提交。
*** 贡献者(Contributor)步骤：
    1. 贡献者 Fork：网页操作，程序操作，Emacs-Magithub 操作
    2. 贡献者 Clone 自己的fork 到本地 repository
    3. 贡献者修改后 push 到贡献者的fork
    4. 向 owner 提交 pull request
    5. 贡献者 sync with owner's master [[https://stackoverflow.com/questions/7244321/how-do-i-update-a-github-forked-repository]]
** Emacs + Git
   1. helm-github-stars
   2. github-stars-list
   3. Magit
   4. Magithub: Magit 配合 github 使用

* Vim
** 基础
   1. normal mode，edit mode， visual mode
   2. 使用冒号输入命令
   3. 光标移动hjkl
   4. 翻页C-u，C-d
** Vim复制粘贴
   1. GVim 的话，CTRL+INSERT 复制到windows剪贴板，SHIFT+INSERT从windows剪贴板粘贴。
   2. 直接 Ctrl-c，Ctrl-x，Ctrl-v
   3. 在可视模式下，y，p复制粘贴只能在vim里面进行，不能到系统剪切板，可视模式下到剪切板应分别使用 ~"+y~ 和 ~+p~
** Vim 查找替换
   1. 查找  /
   2. 替换 ~：%s/查找内容 /替换内容 /g~ ，如需一个个确认，可以在g后面直接连上c
** Vim 注释代码-NERDcommenter
   1. 安装 NERDCommenter
   2. 设置 vimtc 文件

#+BEGIN_SRC R :eval no
let mapleader=","
set timeout timeoutlen=1500
#+END_SRC

   3. =,cc= 注释当前行， =,c<space>= Toggle 注释

* Diagram
** Asciiart, ditaa
   1. artist-mode
   2. ditaa.jar
   3. org-babel
** Graphviz dot graph
   1. Graphviz program
   2. Graphviz-dot-mode
   3. org-babel
** Plantuml
   1. plantuml.jar(需要java run time 环境支持)
   2. plantuml-mode
   3. org-babel
** Mermaid
   1. 安装 mermaid-filter(包含了 mermaid和mermaid-cli，需要 node.js 支持)
   2. mermaid-mode
   3. ob-mermaid
   4. org-babel
   5. pandoc markdown with mermaid-filter
      - 生成图形，标题和引用都没有问题，但图形使用bookdown不能自动编号
      - 主要原因是：目前使用的bookdown的图表自动编号功能，其是建立在knitr把图表
        生成html代码格式，而不是标准的pandoc markdown插入图表用法。
      - 更好的方式是使用pandoc的插件pandoc-crossref,但 knitr 不支持
      - 目前的解决方法：1. 不要自动编号 2. 写 mmd文件生成图片后，使用 knitr::include_graphics 插入图片
      - 未来解决方法：写一个 基于 python的pandoc-filter，把图片的格式统一
   6. 注意 R的 diagramer 包支持mermaid，在Rstudio中可以直接编辑 mmd格式文件然后生成图形.

* Emacs
** Org-mode
*** Org sync

    - org todo list sync with Toodledo.com by org-toodledo package, but it has
      some bugs(emacs hang). Toodledo can also sync with outlook and evernote
      (by gSyncit).
    - DO NOT delete from server, or will be some mistakes.
    - Org files can be edited in Phone and synced with the cloud, and then synced with computers.
      1. the cloud: 坚果云
      2. sync with computers: 坚果云Window客户端
      3. sync with Phone: Foldersync App, set up 坚果云的webdav.
      4. edit org file in phone: Orgzly App.

*** Org mode integrate with Outlook, evernote and Lotus Notes

    - Org mode integrate with Outlook, evernote, see above.
    - Lotus Notes is not used any more.

** ess-mode
*** ess eldoc not working with bookmark+

    - when emacs library "bookmark+" loaded, in ess-13.09, ess-eldoc
      can't work, when pointing a function , echo area just show
      "nil:", not arguments hints; I tried ess-12.04-4, ess-eldoc can
      work with "bookmark+".

** 数学公式转换 MathML LaTex Odt docx xml org-mode
*** MathML
    - Mathtoweb Coverter  [[http://www.mathtoweb.com/cgi-bin/mathtoweb_home.pl][Website]]
*** org-mode export odt 时如何把latex转化为odt公式
    - latex 可以转化为 MathML
    - word 2007之后直接粘贴 MathML 代码可以显示为公式
    - Mathematica具备显示latex, MathML的功能

** R functions for nonparametrics and semiparametrics
*** packages for non- and semi- parametrics models
    - sm
    - SemiPar
    - mgcv
    - gam
    - assist
    - stats
    - splines
    - gss
    - locfit
    - vgam
    - gamlss
*** functions
    - kernel:stats
    - ksmooth:stats
    - kernapply:stats
    - smooth.spline:stats
    - loess:stats
    - lowess:stats
    - bs:splines
    - ns:splines
    - gam:mgcv

** 安装新的Emacs
     1. 官方下载新版本(64位)，也可以是32位，为兼容性起见，推荐32位, 经验证，64位启动快1秒
     2. 解压后放至worktools文件夹
     3. 把 emacs.bat和emacs.bat放到bin文件夹中
     4. 修改环境变量PATH
     5. 修改任务栏快捷方式
     6. 修改AHK文件
     7. 修改 lisp-org 文件夹为如 list-org-9.1.9, 以防止emacs默认加载安装包的org，要使得其加载 elpa里面的版本
** Emacs template
    1. Abbrev mode
    2. auto-insert-mode
    3. clipper.el
    4. yasnippet
* 文件整理与同步
** 工具简介
   1. org-mode
   2. Rmd
   3. Trello: 用于手机快速记录，各种设备同步
   4. Github
   5. GoosSync, 坚果云, foldersync
   6. Evernote
* 代码
** lme simulation code

#+BEGIN_SRC R
## prepare
rm(list = ls())
set.seed(2345)

N <- 30
unit.df <- data.frame(unit = c(1:N), a = rnorm(N))

head(unit.df, 3)
unit.df <-  within(unit.df, {
  E.alpha.given.a <-  1 - 0.15 * a
  E.beta.given.a <-  3 + 0.3 * a
})
head(unit.df, 3)

library(mvtnorm)
q = 0.2
r = 0.9
s = 0.5
cov.matrix <- matrix(c(q^2, r * q * s, r * q * s, s^2), nrow = 2,
                     byrow = TRUE)
random.effects <- rmvnorm(N, mean = c(0, 0), sigma = cov.matrix)
unit.df$alpha <- unit.df$E.alpha.given.a + random.effects[, 1]
unit.df$beta <- unit.df$E.beta.given.a + random.effects[, 2]
head(unit.df, 3)

J <- 30
M = J * N  #Total number of observations
x.grid = seq(-4, 4, by = 8/J)[0:30]

within.unit.df <-  data.frame(unit = sort(rep(c(1:N), J)), j = rep(c(1:J),
                              N), x =rep(x.grid, N))
flat.df = merge(unit.df, within.unit.df)

flat.df <-  within(flat.df, y <-  alpha + x * beta + 0.75 * rnorm(n = M))
simple.df <-  flat.df[, c("unit", "a", "x", "y")]
head(simple.df, 3)

library(lme4)
my.lmer <-  lmer(y ~ x + (1 + x | unit), data = simple.df)
cat("AIC =", AIC(my.lmer))
my.lmer <-  lmer(y ~ x + a + x * a + (1 + x | unit), data = simple.df)
summary(my.lmer) 
#+END_SRC
** MSGARCH

#+BEGIN_SRC R
  library(MSGARCH)
  spec1 <- CreateSpec(distribution.spec = list(distribution = c("norm", "norm")),
                      switch.spec = list(do.mix=TRUE))
  summary(spec1)
  data("dem2gbp", package = "MSGARCH")
  fit.ml <- FitML(spec = spec1, data=dem2gbp)
  summary(fit.ml)
  
#+END_SRC
* Math
** Math in MS Word
   1. Word’s first math editing facility was the EQ field.
   2. MathType and its limited edition, the Equation Editor, made math entry
      easier and considerably more general than the EQ field by adding intuitive
      tool bars giving access to mathematical symbols and function templates.
   3. native Office math facility(OMML Office math markup language) introduced in Microsoft Word in 2007 and added
      to PowerPoint, OneNote, and in Excel Text Boxes in 2010.
   4. Design Science designed MathType, which first shipped on the Mac in 1987
      and was released on Windows in 1990. A simplified version of MathType
      called the Equation Editor was introduced in 1992 and has shipped as part
      of Office on Windows and the Mac ever since.
** Background
   1. The old Word Equation Editor was built upon MathType.
   2. The new Word Equation Editor is based on OMML.
   3. A MathType-Equation is displayed as an image in Word. If you have MathType
      installed, a separate window opens if you click to edit the
      equation. Else, you cannot edit it. New equations (OMML) can be edited
      directly inside the Word software.
   4. OMML and MathML are both XML-formats. omml2mml.xsl is a file provided by Microsoft to go from OMML to MathML.
   5. MathType uses a non-XML-structure for its equations.
   6. MathType can import MathML equations, but not OMML.
   7. MathType therefore requires the omml2mml.xsl file to generate MathML first.
   8. On a side note, MathType does not always preserve character styles (bold/italic) when exporting to MathML/TeX.
   9. To support all equation-types in Word, and to improve the performance of conversion, transpect is able to translate MathType to MathML.
** Office 中数学公式的种类
   1. EQ域：EQ field，最先使用，outdated
   2. Microsoft Equation Editor 3.x: mathtype 的精简版，已不再用
   3. Mathtype
   4. Office Math(OMML, Word 2007 引入)
   5. LaTex
** 相互转换
   1. Equation Editor 3.x, Office Math, Latex->Mathtype: by Mathtype
   2. Mathtype->Latex: Mathtype
   3. Mathtype->Equation Editor 3.x: GrindEQ
   4. Mathtype->Office Math:
      1. Office 365
      2. Office 2019?
      3. setting MathType's Cut and Copy Preferences: "namespace attr", convert, cut and paste
      4. Mathtype' convert: "namespace attr"
   5. Latex->Office Math:
      1. pandoc(但是稍复杂代码不支持)
      2. Office365, Office 2019?
      3. Latex->Mathtype->Office Math
   6. Office Math -> Latex:
      1. pandoc
      2. office math -> mathtype -> Latex
** 使用原则，尽量使用 Office Math
   1. Office math 输入方法： Unicode Math
   2. Office 2019 中可以使用 Latex 输入
** rmarkdown 转化为 word 公式处理
   1. 一般latex代码直接转换成了 Office Math
   2. 复杂latex代码转换不了直接以latex代码在 word 中，可以先使用mathtype转化为mathtype公式再转换为Office Math
* 移动版worktools注意事项
** 基本要求
   1. 盘符为H(start.bat, changedriver.bat)
   2. 设置PATH,设置时使用32位程序(emacs, jre, R)
   3. 运行 mobile.exe
** Emacs init 文件修改
   1. 把所有文件中的C:\换成H:\
   2. face.el 中字体设置：要保证Consolas字体和微软雅黑字体存在，否则注释掉 cnfonts 部分，根据系统字体情况(如xp系统)设置 set-default-attribute 和 init-msyh 打开
   3. basic.el中设置 color-theme
   4. 公开场所不显示 org-agenda
   5. 减少加载文件，加快速度
** Vimrc 文件设置
   1. 要保证Consolas字体和幼圆字体存在，否则会出错
** 注意
   1. 直接用bat文件拷贝fonts文件安装字体会出错，特别是字体已存在的时候
   2. git项目文件夹要把 .git 隐藏文件夹拷进去，才有项目信息
* 参考文献                                                           :ignore:
要有文字，否则会出错参考文献1 [[cite:WangGG2014]]， 参考文献2  \cite{Ohishi2009535}
#+BEAMER: \begin{frame}[allowframebreaks] \frametitle{参考文献}  \footnotesize

# \bibliography{Bibfile}  \bibliographystyle{GBT7714-2005N} % 使用该注释让org-ref找到本地bib文件
#+BIBLIOGRAPHY: Bibfile nil limit:t

#+BEAMER: \end{frame}


* Export Configuration 					   :noexport:ARCHIVE:
#+LATEX_CLASS_OPTIONS: [11pt,xcolor=dvipsnames,aspectratio=43,hyperref={bookmarksdepth=4}]
# +LATEX_CLASS_OPTIONS: [UTF8,a4paper,12pt]{ctexart}  % Latex 去掉上面的语句，加上本语句
#+LaTeX_HEADER_EXTRA: % -------------------------- Document Title -----------------------------
#+LATEX_HEADER_EXTRA: \usepackage{titling}
#+LATEX_HEADER_EXTRA: \pretitle{\begin{center}\vskip -1em\Large\textbf}
#+LATEX_HEADER_EXTRA: \posttitle{\thanks{\textbf{基金项目}：中南财经政法大学基本科研业务费青年教师创新项目（20132049）；中南财经政法大学2013年实验教学项目《统计学实验课程动态图示项目建设》}\par\end{center}}
#+LATEX_HEADER_EXTRA: \preauthor{\begin{center}\CJKfamily{kai}
#+LATEX_HEADER_EXTRA: \lineskip -1em%
#+LATEX_HEADER_EXTRA: \begin{tabular}[t]{c}}
#+LATEX_HEADER_EXTRA: \postauthor{\end{tabular}\par\end{center}}
#+LATEX_HEADER_EXTRA: \predate{\begin{center}\CJKfamily{kai}\vskip -1.2em}
#+LATEX_HEADER_EXTRA: \postdate{\par\end{center}\vskip -2em}
#+LaTeX_HEADER_EXTRA: % ------------------------Chapter Section Title-------------------------
#+LaTeX_HEADER_EXTRA: \usepackage{titlesec}
#+LaTeX_HEADER_EXTRA: \titleformat{\section}{\large\bfseries}{\thesection}{1em}{}
#+LaTeX_HEADER_EXTRA: \titleformat{\subsection}{\normalsize\bfseries}{\thesubsection}{0.5em}{}
#+LaTeX_HEADER_EXTRA: \titlespacing{\section}{0pt}{1ex plus 1ex minus .2ex}{1ex plus 1ex minus .2ex}
#+LaTeX_HEADER_EXTRA: \titlespacing{\subsection}{0pt}{0.5ex plus 1ex minus .2ex}{0.5ex plus 1ex minus .2ex}
#+LaTeX_HEADER_EXTRA: % ------------------------Figure and Table Caption---------------------
#+LaTeX_HEADER_EXTRA: \makeatletter                        % 图表标题格式设置
#+LaTeX_HEADER_EXTRA: \renewcommand{\fnum@table}[1]{\small \bfseries\textcolor{Violet}{\tablename\thetable~~}}
#+LaTeX_HEADER_EXTRA: \renewcommand{\fnum@figure}[1]{\small \CJKfamily{hei} \textcolor{Violet}{\figurename\thefigure~~}}
#+LaTeX_HEADER_EXTRA: \makeatother
#+LaTeX_HEADER_EXTRA: \renewcommand{\thefigure}{\arabic{figure}}
#+LaTeX_HEADER_EXTRA: \renewcommand{\thetable}{\arabic{table}}
#+LaTeX_HEADER_EXTRA: \newcommand{\HRule}{\rule{\linewidth}{0.5mm}}
#+LaTeX_HEADER_EXTRA: % -----------------------------Ref and Bib----------------------------
#+LaTeX_HEADER_EXTRA: \usepackage[super,square,sort&compress]{natbib}      % 参数代表：数字和排序与压缩
#+LaTeX_HEADER_EXTRA: \setlength{\bibsep}{0ex}                             % 参考文献中行距缩小

#+LaTeX_HEADER_EXTRA: \usepackage[top=2cm,bottom=2cm,left=3cm,right=3cm]{geometry}
#+LaTeX_HEADER_EXTRA: \sloppy
#+LaTeX_HEADER_EXTRA: \linespread{1.1}                    % 设置行距
#+LaTeX_HEADER_EXTRA: \setlength{\parindent}{24pt}        % 段落缩进
#+LaTeX_HEADER_EXTRA: \setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}
#+LaTeX_HEADER_EXTRA: \pagestyle {plain}                  % 去掉页眉
#+LaTeX_HEADER_EXTRA: \usepackage{enumitem}               % 设置item间距
#+LaTeX_HEADER_EXTRA: \setitemize[1]{itemsep=0pt,partopsep=0pt,parsep=\parskip,topsep=5pt}  % 设置item间距
#+LaTeX_HEADER_EXTRA: \setenumerate[1]{itemsep=0pt,partopsep=0pt,parsep=\parskip,topsep=5pt} % 设置枚举间距
# +LaTeX_HEADER_EXTRA: \floatsetup[table]{style=plain,capposition=top,font=small}% 在.emacs文件中加载的floatsetup包取代了float包

# +LaTeX_HEADER_EXTRA: \everymath{\color{blue}}
# +LaTeX_HEADER_EXTRA: \everydisplay{\color{blue}}

# +LATEX_HEADER: \author{\CJKfamily{kai} 金\quad 林 \\ \normalsize \CJKfamily{kai} （中南财经政法大学\, 统计与数学学院\, 湖北\, 武汉\, 430073）}
#+LATEX_HEADER: \author{\CJKfamily{kai} 金 \enspace 林 \\ \CJKfamily{kai} 中南财经政法大学统计系 \\ jinlin82@qq.com}


#+BEAMER_HEADER: \usetheme{default}
#+BEAMER_HEADER: \useinnertheme[shadow]{rounded}
#+BEAMER_HEADER: \useoutertheme{infolines}
#+BEAMER_HEADER: \usecolortheme{seahorse}
#+BEAMER_HEADER: \setbeamercolor{frametitle}{fg=Blue, bg=white}
#+BEAMER_HEADER: \setbeamercolor{titlelike}{parent=structure}
#+BEAMER_HEADER: \setbeamertemplate{caption}[numbered]
#+BEAMER_HEADER: \setbeamertemplate{section in toc shaded}[default][50]
#+BEAMER_HEADER: \setbeamertemplate{frametitle continuation}[from second][(续)] % 改变
#+BEAMER_HEADER: \setbeamertemplate{subsection in toc shaded}[default][20]
# +BEAMER_HEADER: \setbeamertemplate{section in toc}[circle]
#+BEAMER_HEADER: \setbeamertemplate{subsection in toc}[square]
#+BEAMER_HEADER: \logo{\includegraphics[height=0.6cm,width=0.6cm]{znufelogo.jpg}}
#+BEAMER_HEADER: \setbeamercovered{transparent}
#+BEAMER_HEADER: \setCJKmainfont[BoldFont={* Bold}]{Microsoft YaHei}
#+BEAMER_HEADER: \usefonttheme[onlylarge]{structuresmallcapsserif}
#+BEAMER_HEADER: \usefonttheme[onlymath]{serif}
#+BEAMER_HEADER: \setbeamertemplate{frametitle}{\bfseries\insertframetitle\par\vskip-6pt}

#+BEAMER_HEADER: \AtBeginSection[]
#+BEAMER_HEADER: {
#+BEAMER_HEADER: \setcounter{tocdepth}{2}
#+BEAMER_HEADER: \frame[shrink=5]{\tableofcontents[currentsection, hideothersubsections]}
#+BEAMER_HEADER: }
#+BEAMER_HEADER: \AtBeginSubsection[] % Do nothing for \subsection*
#+BEAMER_HEADER: {
#+BEAMER_HEADER: \begin{frame}<beamer>
#+BEAMER_HEADER: \frametitle{}
#+BEAMER_HEADER: \Large \tableofcontents[currentsubsection,sectionstyle=hide/hide, subsectionstyle=show/shaded/hide]
#+BEAMER_HEADER: \end{frame}
#+BEAMER_HEADER: }
#+BEAMER_HEADER: \setlength{\parskip}{1ex plus 0.5ex minus 0.2ex}
# +BEAMER_HEADER: \usepackage[orientation=landscape,size=custom,width=16,height=9.75,scale=0.5,debug]{beamerposter}

# +BEAMER_HEADER: \everymath{\color{blue}}
#+BEAMER_HEADER: \everydisplay{\color{blue}}
#+BEAMER_HEADER: \author[金\; 林(中南财经政法大学统计系)]{\CJKfamily{kai} 金 \enspace 林 \\ 中南财经政法大学统计系 \\ jinlin82@qq.com}

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="markdown.css"/>
#+HTML_MATHJAX: tagside: right 
#+HTML_MATHJAX: cancel.js noErrors.js

#+AUTHOR:  金 \nbsp 林 \\ 中南财经政法大学统计系 \\ jinlin82@qq.com
#+EMAIL: jinlin82@qq.com
# +DATE: 2014年9月10日
#+OPTIONS: H:3 toc:t num:4 LaTeX:nil ^:{} email:nil tex:t author:nil arch:nil DATE:t
#+TITLE:  Python 基础

#+PROPERTY: header-args :tangle yes
